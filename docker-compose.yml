version: '3.8'

services:
  # MongoDB 数据库服务
  mongodb:
    image: mongo:latest
    container_name: blog-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root
      MONGO_INITDB_DATABASE: markdown_db
    volumes:
      # 挂载到现有的数据目录 (如果路径不存在会自动创建)
      - D:/docker volumns/mongo:/data/db
      # 配置文件目录
      - mongodb_config:/data/configdb
      # 初始化脚本
      - ../md-svc/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    ports:
      - "27017:27017"
    networks:
      - blog-network

  # Markdown 后端服务
  backend:
    image: md-svc:latest  # 使用现有的后端镜像
    container_name: blog-backend
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 3001
      API_PREFIX: /api/v1
      # 连接到compose中的MongoDB服务
      MONGODB_URI: mongodb://root:root@mongodb:27017/markdown_db?authSource=admin
      CORS_ORIGIN: http://localhost:3000
      UPLOAD_MAX_SIZE: 10mb
      JWT_SECRET: your-super-secret-jwt-key-change-this-in-production
      SESSION_SECRET: your-super-secret-session-key-change-this-in-production
    ports:
      - "3001:3001"
    depends_on:
      - mongodb
    networks:
      - blog-network
    volumes:
      # 挂载上传文件目录
      - ../md-svc/uploads:/app/uploads
      # 挂载日志目录
      - ../md-svc/logs:/app/logs
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3001/health', (res) => { if (res.statusCode === 200) { process.exit(0); } else { process.exit(1); } }).on('error', () => process.exit(1))"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Next.js 前端服务
  frontend:
    image: next-blog:latest  # 使用现有的前端镜像
    container_name: blog-frontend
    restart: unless-stopped
    environment:
      NODE_ENV: production
      # 客户端访问后端使用localhost，服务端访问使用backend
      NEXT_PUBLIC_API_BASE_URL: http://backend:3001/api/v1
    ports:
      - '3000:3000'
    depends_on:
      - backend
    networks:
      - blog-network

volumes:
  mongodb_data:
    driver: local
  mongodb_config:
    driver: local

networks:
  blog-network:
    driver: bridge
